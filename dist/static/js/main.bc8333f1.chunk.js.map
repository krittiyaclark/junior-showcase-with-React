{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","react_router_dom","to","onClick","profile","initials","SignedOutLinks","state","console","log","firebase","links","uid","layout_SignedInLinks","layout_SignedOutLinks","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Notifications","notifications","map","item","key","user","content","moment","time","toDate","fromNow","ProjectSummary","_ref","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","projects_ProjectSummary","Dashboard","this","_this$props","projects_ProjectList","dashboard_Notifications","react_router","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","authorId","add","objectSpread","Date","App","layout_Navbar","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","userProfile","useFirestoreForProfile","attachAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bc8333f1.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signOut } from '../../store/actions/authActions';\n\nconst SignedInLinks = (props) => {\n    return (\n        <ul className=\"navbar-nav d-flex\">\n            <li className=\"nav-item\">\n                <NavLink to=\"/create\" className=\"nav-link\">New Project</NavLink>\n            </li>\n            <li className=\"nav-item\">\n                <a onClick={props.signOut} className=\"nav-link\">Log Out</a>\n            </li>\n            <li className=\"nav-item\">\n                <NavLink to=\"/\" className=\"btn bg-info rounded-circle nav-link\">\n                    {props.profile.initials}\n                </NavLink>\n            </li>\n        </ul>\n    )\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signOut: () => dispatch(signOut()) \n    }\n}\n\nexport default connect(null, mapDispatchToProps)(SignedInLinks);","export const signIn = (credentials) => {\n    return (dispatch, getState, {getFirebase}) => {\n        // initial firebase \n        const firebase = getFirebase();\n\n        firebase.auth().signInWithEmailAndPassword(\n            credentials.email,\n            credentials.password\n        ).then(() => {\n            dispatch({ type: 'LOGIN_SUCCESS' });\n        }).catch((err) => {\n            dispatch({ type: 'LOGIN_ERROR', err });\n        });\n    }\n}\n\nexport const signOut = () => {\n    return (dispatch, getState, {getFirebase}) => {\n        const firebase = getFirebase();\n\n        firebase.auth().signOut().then(() => {\n            dispatch({ type: 'SIGNOUT_SUCCESS' });\n        });\n    }\n}\n\nexport const signUp = (newUser) => {\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n      const firebase = getFirebase();\n      const firestore = getFirestore();\n  \n      firebase.auth().createUserWithEmailAndPassword(\n        newUser.email, \n        newUser.password\n      ).then(resp => {\n        return firestore.collection('users').doc(resp.user.uid).set({\n          firstName: newUser.firstName,\n          lastName: newUser.lastName,\n          initials: newUser.firstName[0] + newUser.lastName[0]\n        });\n      }).then(() => {\n        dispatch({ type: 'SIGNUP_SUCCESS' });\n      }).catch((err) => {\n        dispatch({ type: 'SIGNUP_ERROR', err});\n      });\n    }\n  }","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst SignedOutLinks = () => {\n    return (\n        <ul className=\"navbar-nav ml-auto\">\n            <li className=\"nav-item\">\n                <NavLink to=\"/signUp\" className=\"nav-link\">Signup</NavLink>\n            </li>\n            <li className=\"nav-item\">\n                <NavLink to=\"/signIn\" className=\"nav-link\">Login</NavLink>\n            </li>\n        </ul>\n    )\n}\n\nexport default SignedOutLinks;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport SignedInLinks from './SignedInLinks';\nimport SignedOutLinks from './SignedOutLinks';\nimport { connect } from 'react-redux';\n\nconst Navbar = (props) => {\n    const { auth, profile } = props;\n    console.log(auth);\n\n    const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />;\n    return (\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark mb-0 h1\">\n            <div className=\"container\">\n                <Link to=\"/\" className=\"navbar-brand\">Wippo</Link>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">     \n                    { links }\n                </div>  \n            </div>\n        </nav>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    console.log(state);\n    return {\n        auth: state.firebase.auth,\n        profile: state.firebase.profile\n    }\n}\nexport default connect(mapStateToProps)(Navbar);","import React from 'react';\nimport moment from 'moment';\n\nconst Notifications = (props) => {\n    const {notifications} = props;\n    return (\n        <div className=\"section\">\n            <div className=\"card\">\n                <div className=\"card-content\">\n                    <div className=\"card-title\">\n                        <h3>Notifications</h3>\n                    </div>\n                        <ul className=\"notifications\">\n                            { notifications && notifications.map(item => {\n                                return (\n                                    <li key={item.id}>\n                                        <span className=\"text-info\">{item.user} </span>\n                                        <span>{item.content}</span>\n                                        <div className=\"note-date text-info\">\n                                            {moment(item.time.toDate()).fromNow()}\n                                        </div>\n                                    </li>\n                                )\n                            }) }                            \n                        </ul>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Notifications;\n\n","import React from 'react';\nimport moment from 'moment';\n\nconst ProjectSummary = ({project}) => {\n    return(\n        <div className=\"card project-summary\">\n            <div className=\"card-content text-secondary\">\n                <h5 className=\"card-title\">{project.title}</h5>\n                <p className=\"card-text\">Posted by {project.authorFirstName} {project.authorLastName}</p>\n                <p className=\"text-secondary\">{moment(project.createdAt.toDate()).calendar()}</p>\n            </div>\n        </div>\n    )\n}\n\nexport default ProjectSummary;","import React from 'react';\nimport ProjectSummary from './ProjectSummary';\nimport { Link } from 'react-router-dom';\n\n\nconst ProjectList = ({ projects }) => {\n    return (\n        <div className=\"project-list section\">\n            { projects && projects.map(project => {\n                return (\n                    <Link to={'/project/' + project.id} key={ project.id } >\n                        <ProjectSummary project={ project } />\n                    </Link>\n                )\n            })}\n        </div>\n    )\n}\n\nexport default ProjectList;","import React, { Component } from 'react';\nimport Notifications from './Notifications';\nimport ProjectList from '../projects/ProjectList';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom';\n\n\nclass Dashboard extends Component {\n    render(){\n        console.log(this.props);\n        const { projects, auth, notifications } = this.props;\n        if (!auth.uid) return <Redirect to='/signIn' />\n        return (\n            <div className=\"dashboard container\">\n                <div className=\"row\">\n                    <div className=\"col col-12 col-md-6\">\n                        <ProjectList projects={ projects }/>\n                    </div>\n                    <div className=\"col col-12 col-md-5 offset-md-1\">\n                        <Notifications notifications={notifications} />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    console.log(state);\n    return {\n        projects: state.firestore.ordered.projects,\n        auth: state.firebase.auth,\n        notifications: state.firestore.ordered.notifications\n    }\n  }\n  \n  export default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n      { collection: 'projects', orderBy: ['createdAt', 'desc'] },\n      { collection: 'notifications', limit: 3, orderBy: ['time', 'desc'] }\n    ])\n  )(Dashboard)","import React from 'react';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom';\nimport moment from 'moment';\n\n\nconst ProjectDetails = (props) => {\n  // console.log(props); //props.match.params.id\n  // const id = props.match.params.id;\n  const { project, auth } = props;\n  if (!auth.uid) return <Redirect to='/signIn' />\n\n  if (project) {\n    return (\n      <div className=\"container section project-details\">\n          <div className=\"card\">\n              <div className=\"card-content\">\n                  <div className=\"card-title\">{ project.title }</div> \n                  <p>{ project.content }</p>\n              </div>\n              <div className=\"card action\"></div> \n                  <div>Posted by { project.authorFirstName } { project.authorLastName }</div>\n                  <div>{moment(project.createdAt.toDate()).calendar()}</div>\n          </div>\n      </div>\n    )\n} else {\n    return(\n      <div className=\"container center\">\n        <p>Loading project...</p>\n      </div>\n    )\n  } \n}\n\nconst mapStateToProps = (state, ownProps) => {\n  console.log(state)\n  const id = ownProps.match.params.id;\n  const projects = state.firestore.data.projects;\n  const project = projects ? projects[id]  : null\n  return {\n    project: project,\n    auth: state.firebase.auth\n  }\n}\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    { collection: 'projects' }\n  ])\n)(ProjectDetails)\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { signIn } from '../../store/actions/authActions';\nimport { Redirect } from 'react-router-dom';\n\nclass SignIn extends Component {\n    state = {\n        email: '',\n        password: ''\n      }\n      handleChange = (e) => {\n        this.setState({\n          [e.target.id]: e.target.value\n        })\n      }\n      handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.signIn(this.state);\n        console.log(this.state);\n      }\n    \n    render() {  \n      const { authError, auth } = this.props;  \n      if (auth.uid) return <Redirect to='/' />\n\n        return (\n            <div className=\"container\">\n            <form onSubmit={ this.handleSubmit } className=\"bg-white\">\n                <h5 className=\"text-grey\">SignIn</h5>\n                <div className=\"input-field\">\n                    <label htmlFor=\"email\">Email</label>\n                    <input type=\"email\" id=\"email\" onChange={ this.handleChange } />\n                </div>\n                <div className=\"input-field\">\n                    <label htmlFor=\"password\">Password</label>\n                    <input type=\"password\" id=\"password\" onChange={ this.handleChange } />\n                </div>\n                <div className=\"input-field\">\n                    <button className=\"btn bg-info\">LogIn</button>\n                    <div className=\"text-danger center\">\n                      { authError ? <p>{ authError }</p>: null}\n                    </div>\n                </div>\n            </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    authError: state.auth.authError,\n    auth: state.firebase.auth\n  }\n}\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signIn: (creds) => dispatch(signIn(creds))\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { signUp } from '../../store/actions/authActions';\n\n\nclass SignUp extends Component {\n    state = {\n        email: '',\n        password: '',\n        firstName: '',\n        lastName: ''\n      }\n      handleChange = (e) => {\n        this.setState({\n          [e.target.id]: e.target.value\n        })\n      }\n      handleSubmit = (e) => {\n        e.preventDefault();\n        console.log(this.state);\n        this.props.signUp(this.state)\n      }\n    \n    render() { \n        const { auth, authError } = this.props;  \n        if (auth.uid) return <Redirect to='/' /> \n        return (\n            <div className=\"container\">\n            <form onSubmit={ this.handleSubmit } className=\"bg-white\">\n                <h5 className=\"text-grey\">SignUp</h5>\n                <div className=\"input-field\">\n                    <label htmlFor=\"email\">Email</label>\n                    <input type=\"email\" id=\"email\" onChange={ this.handleChange } />\n                </div>\n                <div className=\"input-field\">\n                    <label htmlFor=\"password\">Password</label>\n                    <input type=\"password\" id=\"password\" onChange={ this.handleChange } />\n                </div>\n                <div className=\"input-field\">\n                    <label htmlFor=\"firstName\">First Name</label>\n                    <input type=\"text\" id=\"firstName\" onChange={ this.handleChange } />\n                </div>\n                <div className=\"input-field\">\n                    <label htmlFor=\"lastName\">Last Name</label>\n                    <input type=\"text\" id=\"lastName\" onChange={ this.handleChange } />\n                </div>\n                <div className=\"input-field\">\n                    <button className=\"btn bg-info\">SignUp</button>\n                    <div className=\"text-danger center\">\n                      { authError ? <p>{ authError }</p>: null}\n                    </div>\n                </div>\n            </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth,\n    authError: state.auth.authError\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signUp: (creds) => dispatch(signUp(creds))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { createProject } from '../../store/actions/projectActions';\nimport { Redirect } from 'react-router-dom';\n\nclass CreateProject extends Component {\n    state = {\n        title: '',\n        content: ''\n      }\n      handleChange = (e) => {\n        this.setState({\n          [e.target.id]: e.target.value\n        })\n      }\n      handleSubmit = (e) => {\n        e.preventDefault();\n        //console.log(this.state);\n        this.props.createProject(this.state)\n        this.props.history.push('/');\n      }\n    \n    render() {  \n        const { auth } = this.props;\n        if (!auth.uid) return <Redirect to='/signIn' />\n        return (\n            <div className=\"container\">\n            <form onSubmit={ this.handleSubmit } className=\"bg-white\">\n                <h5 className=\"text-grey\">Create new project</h5>\n                <div className=\"input-field\">\n                    <label htmlFor=\"title\">Title</label>\n                    <input type=\"text\" id=\"title\" onChange={ this.handleChange } />\n                </div>\n                <div className=\"input-field\">\n                    <label htmlFor=\"content\">Project Content</label>\n                    <textarea id=\"content\" className=\"materialize-textarea\" onChange={ this.handleChange } ></textarea>\n                </div>\n                <div className=\"input-field\">\n                    <button className=\"btn bg-info\">Create</button>\n                </div>\n            </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth\n  }\n}\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    createProject: (project) => dispatch(createProject(project))\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);\n","export const createProject = (project) => {\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n        // make async call to database \n        const firestore = getFirestore();\n        const profile = getState().firebase.profile;\n        const authorId = getState().firebase.auth.uid;\n\n        firestore.collection('projects').add({\n            ...project,\n            authorFirstName: profile.firstName,\n            authorLastName: profile.lastName,\n            authorId: authorId,\n            createdAt: new Date()\n        }).then(() => {\n            dispatch({ type: 'CREATE_PROJECT', project });\n        }).catch((err) => {\n            dispatch({ type: 'CREATE_PROJECT_ERROR'}, err );\n        })\n        \n    }\n};","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetails from './components/projects/ProjectDetails';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/projects/CreateProject';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route exact path=\"/\" component={ Dashboard } />\n            <Route path=\"/project/:id\" component={ ProjectDetails } />\n            <Route path=\"/signIn\" component={ SignIn } />\n            <Route path=\"/signUp\" component={ SignUp } />\n            <Route path=\"/create\" component={ CreateProject } />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n  authError: null\n}\n\nconst authReducer = (state = initState, action) => {\n  switch(action.type){\n    case 'LOGIN_ERROR':\n      console.log('login error');\n      return {\n        ...state,\n        authError: 'Login failed'\n      }\n      case 'LOGIN_SUCCESS':\n        console.log('login success');\n        return {\n          ...state,\n          authError: null\n        }\n        case 'SIGNOUT_SUCCESS':\n          console.log('signout success');\n          return state;\n        case 'SIGNUP_SUCCESS':\n          console.log('signup success');\n          return {\n            ...state,\n            authError: null\n          }\n        case 'SIGNUP_ERROR':\n          console.log('signup error');\n          return {\n            ...state,\n            authError: action.err.message\n          }\n        default:\n          return state;\n  }\n};\n\nexport default authReducer;\n","const initState = {}\n\nconst projectReducer = (state = initState, action) => {\n  switch (action.type) {\n    case 'CREATE_PROJECT_SUCCESS':\n      console.log('create project', action.project);\n      return state;\n    case 'CREATE_PROJECTR_ERROR':\n    console.log('create project error', action.err);\n    return state;\n  default:\n    return state\n  }\n}\n\nexport default projectReducer;\n","// Combined the authReducer & projecrReducer files together\nimport authReducer from './authReducer';\nimport projectReducer from './projectReducer';\nimport { combineReducers } from 'redux';\nimport { firestoreReducer } from 'redux-firestore';\nimport { firebaseReducer } from 'react-redux-firebase';\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    project: projectReducer,\n    firestore: firestoreReducer,\n    firebase: firebaseReducer\n});\n\nexport default rootReducer;","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\n// Initialize Firebase\nvar config = {\n    apiKey: \"AIzaSyAvpCPZIXZobErOBI6jkSJnvA31Rs0051A\",\n    authDomain: \"wippo-c6ee3.firebaseapp.com\",\n    databaseURL: \"https://wippo-c6ee3.firebaseio.com\",\n    projectId: \"wippo-c6ee3\",\n    storageBucket: \"wippo-c6ee3.appspot.com\",\n    messagingSenderId: \"177517400758\"\n  };\n\n  firebase.initializeApp(config);\n  firebase.firestore().settings({ timestampsInSnapshots: true });\n\n  export default firebase;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { reduxFirestore, getFirestore  } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig';\n\nconst store = createStore(rootReducer, \n    compose(\n        applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n        reduxFirestore(fbConfig), // redux bindings for firestore\n        reactReduxFirebase(fbConfig, {userProfile: 'users', useFirestoreForProfile: true, attachAuthIsReady: true}) // redux binding for firebase\n      )   \n);\n\nReactDOM.render(<Provider store= { store }><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}